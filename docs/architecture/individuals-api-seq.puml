@startuml
actor Client
participant "Individuals API" as API
participant "Keycloak" as KC

== User registration ==
Client -> API: POST /v1/auth/registration\n{email, password, confirm_password}
API -> KC: Get admin token (client_id, client_secret)

KC --> API: Return admin's tokens\n{access_token, refresh_token}
API -> KC: Create user
note right of API
  headers:
    Authorization: Bearer <admin's token>
  body:
    (email, password)
end note
KC --> API: Confirm creation
API -> KC: Get user's tokens\n(client_id, client_secret, username, password, grant_type, scope)
KC --> API: Tokens\n{access_token, refresh_token}
API -> Client: Return tokens\n{access_token, refresh_token, ...}

== Login ==
Client -> API: POST /v1/auth/login\n{email, password}
API -> KC: User authentication\n(email, password)
KC --> API: Tokens\n{access_token, refresh_token, ...}
API -> Client: Return tokens

== Token refreshing ==
Client -> API: POST /v1/auth/refresh-token\n{refresh_token}
API -> KC: Refresh token\n(refresh_token)
KC --> API: New tokens\n(access_token, refresh_token)
API -> Client: Return new tokens

== Getting user info ==
Client -> API: GET /v1/users/{id}\nAuthorization: Bearer access_token
API -> KC: User data request\n(id)
KC --> API: User data
API -> Client: Return user data
@enduml